---
  - include: ../../service_tasks.yml ss={{service}} extra_opts='-e "DB_NAME={{db.name}}" -e "DB_USER={{db.user}}" -e "DB_PASS={{db.pass}}"'

  # Unbearably sloooooooow
  #- name: Copy redmine data
    #copy: src={{ item }} dest=/opt/redmine/data
          #mode=0644 owner=root group=root
    #with_items: [ data/plugins, /data/themes ]
    #tags: redmine-data

  - name: Create redmine database and user if needed
    command: create-db {{db.name}} {{db.user}} {{db.pass}}

  - name: Install required packages locally
    local_action: yum name=unzip state=present
    sudo: true
    tags: redmine-data

  - name: Check if redmine plugins exist
    local_action: stat path="{{playbook_dir}}/roles/docker_redmine/files/data/plugins/init"
    register: plugins_init
    tags: redmine-data

  - name: Get the latest redmine plugins
    local_action: command /bin/bash -c 'cd "{{playbook_dir}}/roles/docker_redmine/files/data/plugins" && . redmine-plugins-install.sh'
    when: not plugins_init.stat.exists
    tags: redmine-data

  - name: Copy localizations
    local_action: command /bin/bash -c 'cd "{{playbook_dir}}/roles/docker_redmine/files/lang" && . copy2data.sh'
    tags: redmine-data

  - name: Ensure data dir
    file: path=/opt/redmine/data state=directory
    tags: redmine-data

  - name: Copy redmine data
    local_action: command sshpass -p "{{ansible_ssh_pass}}" rsync -r "{{playbook_dir}}/roles/docker_redmine/files/data/" "root@{{ansible_ssh_host}}:/opt/redmine/data"
    tags: redmine-data

  - name: Set redmine data permissions
    file: path=/opt/redmine owner=root group=root mode=0755 recurse=yes
    tags: redmine-data

  - name: Create redmine scripts
    template: src=redmine-plugin-rm.j2 dest=/bin/redmine-plugin-rm mode=0755 owner=root

  - name: Start the service
    service: name={{service.name}} state=started
